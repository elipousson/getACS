% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggplot2.R
\name{geom_acs_col}
\alias{geom_acs_col}
\title{Creating a bar chart with error bar and scale}
\usage{
geom_acs_col(
  mapping = NULL,
  data = NULL,
  position = "stack",
  ...,
  x = "estimate",
  y = "column_title",
  fill = y,
  value_col = "estimate",
  moe_col = "moe",
  perc_prefix = "perc",
  perc_sep = "_",
  perc = TRUE,
  orientation = NA,
  errorbar_value = TRUE,
  errorbar_params = list(linewidth = 0.5, height = 0.35, position = "identity"),
  scale_value = TRUE,
  scale_params = list()
)
}
\arguments{
\item{mapping}{Aesthetic mapping. Recommend leaving this as \code{NULL}.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{position}{A position adjustment to use on the data for this layer. This
can be used in various ways, including to prevent overplotting and
improving the display. The \code{position} argument accepts the following:
\itemize{
\item The result of calling a position function, such as \code{position_jitter()}.
This method allows for passing extra arguments to the position.
\item A string naming the position adjustment. To give the position as a
string, strip the function name of the \code{position_} prefix. For example,
to use \code{position_jitter()}, give the position as \code{"jitter"}.
\item For more information and other ways to specify the position, see the
\link[ggplot2:layer_positions]{layer position} documentation.
}}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}'s \code{params} argument. These
arguments broadly fall into one of 4 categories below. Notably, further
arguments to the \code{position} argument, or aesthetics that are required
can \emph{not} be passed through \code{...}. Unknown arguments that are not part
of the 4 categories below are ignored.
\itemize{
\item Static aesthetics that are not mapped to a scale, but are at a fixed
value and apply to the layer as a whole. For example, \code{colour = "red"}
or \code{linewidth = 3}. The geom's documentation has an \strong{Aesthetics}
section that lists the available options. The 'required' aesthetics
cannot be passed on to the \code{params}. Please note that while passing
unmapped aesthetics as vectors is technically possible, the order and
required length is not guaranteed to be parallel to the input data.
\item When constructing a layer using
a \verb{stat_*()} function, the \code{...} argument can be used to pass on
parameters to the \code{geom} part of the layer. An example of this is
\code{stat_density(geom = "area", outline.type = "both")}. The geom's
documentation lists which parameters it can accept.
\item Inversely, when constructing a layer using a
\verb{geom_*()} function, the \code{...} argument can be used to pass on parameters
to the \code{stat} part of the layer. An example of this is
\code{geom_area(stat = "density", adjust = 0.5)}. The stat's documentation
lists which parameters it can accept.
\item The \code{key_glyph} argument of \code{\link[ggplot2:layer]{layer()}} may also be passed on through
\code{...}. This can be one of the functions described as
\link[ggplot2:draw_key]{key glyphs}, to change the display of the layer in the legend.
}}

\item{x, y, fill}{String values with column names mapped to aesthetics.
Optional if \code{mapping} is supplied.}

\item{value_col}{Column name for estimate value column. Defaults to
"estimate".}

\item{moe_col}{Column name for margin of error column. Defaults to
"moe".}

\item{perc_prefix}{Prefix string for percent value columns.}

\item{perc_sep}{Separator string between \code{perc_prefix} and the \code{value_col}
and \code{moe_col} strings.}

\item{perc}{If \code{TRUE}, return percent value and margin of error columns.}

\item{orientation}{The orientation of the layer. The default (\code{NA})
automatically determines the orientation from the aesthetic mapping. In the
rare event that this fails it can be given explicitly by setting \code{orientation}
to either \code{"x"} or \code{"y"}. See the \emph{Orientation} section for more detail.}

\item{errorbar_value}{If \code{TRUE} (default), apply \code{\link[=geom_acs_errorbar]{geom_acs_errorbar()}}
function to geom.}

\item{errorbar_params}{Parameters passed to \code{\link[=geom_acs_errorbar]{geom_acs_errorbar()}} if
\code{errorbar_value = TRUE}. Defaults to \code{list(linewidth = 0.5, height = 0.35)}}

\item{scale_value}{If \code{TRUE} (default), apply \code{\link[=scale_x_acs]{scale_x_acs()}} or
\code{\link[=scale_y_acs]{scale_y_acs()}} function to geom.}

\item{scale_params}{Parameters passed to \code{\link[=scale_x_acs]{scale_x_acs()}} or \code{\link[=scale_y_acs]{scale_y_acs()}}
function if \code{scale_value = TRUE}. Defaults to \code{list()}.}
}
\description{
Create a bar chart with \code{\link[ggplot2:geom_bar]{ggplot2::geom_col()}} and apply an errorbar (using
\link{geom_acs_errorbar}), scale (using \link{scale_x_acs} or \link{scale_y_acs}).
}
\keyword{ggplot2}
