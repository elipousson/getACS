% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_acs_ext.R
\name{get_acs_tables}
\alias{get_acs_tables}
\alias{get_acs_geographies}
\alias{get_acs_geography}
\title{Get multiple ACS tables or multiple tables for multiple geographies}
\usage{
get_acs_tables(
  geography,
  tables = NULL,
  cache_table = TRUE,
  year = 2021,
  survey = "acs5",
  label = TRUE,
  perc = TRUE,
  geoid = "GEOID",
  ...
)

get_acs_geographies(
  geographies = c("county", "state"),
  state = NULL,
  county = NULL,
  msa = NULL,
  tables = NULL,
  cache_table = TRUE,
  year = 2021,
  label = TRUE,
  survey = "acs5",
  perc = TRUE,
  geoid = "GEOID",
  ...
)

get_acs_geography(
  geography,
  state = NULL,
  county = NULL,
  msa = NULL,
  tables = NULL,
  cache_table = TRUE,
  year = 2021,
  label = TRUE,
  survey = "acs5",
  perc = TRUE,
  geoid = "GEOID",
  ...,
  call = caller_env()
)
}
\arguments{
\item{geography}{The geography of your data.}

\item{tables}{A character vector of tables.}

\item{cache_table}{Whether or not to cache table names for faster future
access. Defaults to FALSE; if TRUE, only needs to be called once per
dataset.  If variables dataset is already cached via the
\code{load_variables} function, this can be bypassed.}

\item{year}{The year, or endyear, of the ACS sample. 5-year ACS data is
available from 2009 through 2021; 1-year ACS data is available from 2005
through 2021, with the exception of 2020.  Defaults to 2021.}

\item{survey}{The ACS contains one-year, three-year, and five-year surveys
expressed as "acs1", "acs3", and "acs5". The default selection is "acs5."}

\item{label}{If \code{TRUE} (default), label the returned ACS data with
\code{\link[=label_acs_metadata]{label_acs_metadata()}} before returning the data frame.}

\item{perc}{If \code{TRUE} (default), use the denominator column ID to calculate
each estimate as a percent share of the denominator value and use
\code{\link[tidycensus:moe_prop]{tidycensus::moe_prop()}} to calculate a new margin of error for the percent
estimate.}

\item{geoid}{A GeoID column name to use if perc is \code{TRUE}, Defaults to
'GEOID'.}

\item{...}{Other keyword arguments}

\item{geographies}{A character vector of geographies. See
\url{https://walker-data.com/tidycensus/articles/basic-usage.html#geography-in-tidycensus}
for supported options. Defaults to \code{c("county", "state")}. If a supplied
geography does not support county and state parameters, these options are
dropped before calling \code{\link[tidycensus:get_acs]{tidycensus::get_acs()}}. Any required parameters are
also bound to the returned data frame as new columns.}

\item{state}{An optional vector of states for which you are requesting data.
State names, postal codes, and FIPS codes are accepted. Defaults to NULL.}

\item{county}{The county for which you are requesting data. County names and
FIPS codes are accepted. Must be combined with a value supplied to `state`.
Defaults to NULL.}

\item{msa}{Name or GeoID of a metro area that should be filtered from the
overall list of metro areas returned when geography or geographies  is
"metropolitan/micropolitan statistical area", "cbsa", or "metropolitan
statistical area/micropolitan statistical area".}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
These functions wrap \code{\link[tidycensus:get_acs]{tidycensus::get_acs()}} and \code{\link[=label_acs_metadata]{label_acs_metadata()}} to
support downloading multiple tables and combining tables into a single data
frame or downloading data for multiple geographies. Note that while the
Census API does not have a specific rate or request limit when using a Census
API key, using these functions with a large number of tables or geographies
may result in errors or failed requests.

CRAN policies require that tidycensus avoid caching by default, however, this
package sets \code{cache_table = TRUE} by default to avoid unecessary load on the
Census API.
}
\examples{
\dontrun{
if (interactive()) {
  get_acs_tables(
    geography = "county",
    county = "Baltimore city",
    state = "MD",
    tables = c("B01003", "B19013")
  )

  get_acs_geographies(
    geographies = c("county", "state"),
    state = "MD",
    tables = c("B01003", "B19013")
  )
}
}
}
