% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gt.R
\name{cols_merge_uncert_ext}
\alias{cols_merge_uncert_ext}
\title{Merge columns to a value-with-uncertainty column}
\usage{
cols_merge_uncert_ext(
  gt_object,
  columns = NULL,
  col_val = NULL,
  col_uncert = NULL,
  prefix = "",
  postfix = "",
  sep = "",
  ...,
  call = caller_env()
)
}
\arguments{
\item{gt_object}{A gt object.}

\item{columns}{description}

\item{col_val}{\emph{Column to target for base values}

\verb{<column-targeting expression>} // \strong{required}

The column that contains values for the start of the range. While select
helper functions such as \code{\link[gt:starts_with]{starts_with()}} and \code{\link[gt:ends_with]{ends_with()}} can be used for
column targeting, it's recommended that a single column name be used. This
is to ensure that exactly one column is provided here.}

\item{col_uncert}{\emph{Column or columns to target for uncertainty values}

\verb{<column-targeting expression>} // \strong{required}

The most common case involves supplying a single column with uncertainties;
these values will be combined with those in \code{col_val}. Less commonly, the
lower and upper uncertainty bounds may be different. For that case, two
columns representing the lower and upper uncertainty values away from
\code{col_val}, respectively, should be provided. While select helper functions
such as \code{\link[gt:starts_with]{starts_with()}} and \code{\link[gt:ends_with]{ends_with()}} can be used for column targeting,
it's recommended that one or two column names be explicitly provided in a
vector.}

\item{prefix, postfix}{Optional strings to insert before and/or after both
col_val and col_uncert. Use a length 2 string \code{c("", "uncert_prefix")} if
you want to apply a prefix to only one or the other column specification.}

\item{sep}{\emph{Separator text for uncertainties}

\verb{scalar<character>} // \emph{default:} \code{" +/- "}

The separator text that contains the uncertainty mark for a single
uncertainty value. The default value of \code{" +/- "} indicates that an
appropriate plus/minus mark will be used depending on the output context.
Should you want this special symbol to be taken literally, it can be
supplied within the \code{\link[=I]{I()}} function.}

\item{...}{One or more character vectors.

\code{NULL}s are removed; scalar inputs (vectors of length 1) are recycled to
the common length of vector inputs.

Like most other R functions, missing values are "infectious": whenever
a missing value is combined with another string the result will always
be missing. Use \code{\link[dplyr:coalesce]{dplyr::coalesce()}} or \code{\link[stringr:str_replace_na]{str_replace_na()}} to convert to
the desired value.}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}
}
\description{
\code{\link[=cols_merge_uncert_ext]{cols_merge_uncert_ext()}} is a variant of \code{\link[gt:cols_merge_uncert]{gt::cols_merge_uncert()}} to
support col_val and col_uncert to be set based on a length 2 cols parameter
and optionally apply a prefix or postfix value. These options are primarily
for internal use by \code{\link[=gt_acs]{gt_acs()}}, \code{\link[=fmt_acs_estimate]{fmt_acs_estimate()}}, and
\code{\link[=fmt_acs_percent]{fmt_acs_percent()}}.
}
\seealso{
Other gt table: 
\code{\link{fmt_acs_estimate}()},
\code{\link{gt_acs}()},
\code{\link{tab_acs_source_note}()}
}
\concept{gt table}
