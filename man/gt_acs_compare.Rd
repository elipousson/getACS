% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gt_acs_compare.R
\name{gt_acs_compare}
\alias{gt_acs_compare}
\alias{gt_acs_compare_vars}
\title{Create a gt table with values compared by name, geography, or variable}
\usage{
gt_acs_compare(
  data,
  name_col = "NAME",
  value_col = "estimate",
  moe_col = "moe",
  perc_prefix = "perc",
  perc_sep = "_",
  variable_col = "variable",
  column_title_col = "column_title",
  value_label = "Est.",
  moe_label = "MOE",
  perc_value_label = "\% share",
  perc_moe_label = "\% MOE",
  column_title_label = NULL,
  id_cols = column_title_col,
  id_expand = FALSE,
  names_from = name_col,
  values_from = NULL,
  names_vary = "slowest",
  names_glue = NULL,
  names_sep = "_",
  decimals = 0,
  currency_value = FALSE,
  merge_moe = TRUE,
  split = "last",
  limit = 1,
  reverse = TRUE,
  source_note = NULL,
  append_note = FALSE,
  hide_na_cols = TRUE,
  survey = "acs5",
  year = 2022,
  table = NULL,
  prefix = "Source: ",
  end = ".",
  use_md = FALSE,
  use_spanner = TRUE,
  ...
)

gt_acs_compare_vars(
  data,
  name_col = "NAME",
  value_col = "estimate",
  moe_col = "moe",
  perc_prefix = "perc",
  perc_sep = "_",
  variable_col = "variable",
  column_title_col = "column_title",
  value_label = NULL,
  moe_label = "MOE",
  id_cols = name_col,
  names_from = variable_col,
  values_from = c(value_col, moe_col),
  use_spanner = FALSE,
  ...
)
}
\arguments{
\item{data}{A data frame to pivot.}

\item{name_col}{Name column. Defaults to "NAME". Ignored if names_from is not
set to name_col.}

\item{value_col}{Value column name. Defaults to "estimate"}

\item{moe_col}{Margin of error column name. Defaults to "moe"}

\item{perc_prefix}{Prefix string for percent value columns.}

\item{perc_sep}{Separator string between \code{perc_prefix} and the \code{value_col}
and \code{moe_col} strings.}

\item{variable_col}{Variable column name. Defaults to "variable". Typically,
dropped from table by default.}

\item{column_title_col, column_title_label}{Column title column name and
label. Defaults to  "column_title" and \code{NULL}.}

\item{value_label}{Value column label. Defaults to "Est.".}

\item{moe_label}{Margin of error column label. Defaults to "MOE".}

\item{perc_value_label}{Percent value column label.}

\item{perc_moe_label}{Percent margin of error column label.}

\item{id_cols}{Defaults to \code{column_title_col}. See \code{\link[tidyr:pivot_longer]{tidyr::pivot_longer()}}
for details.}

\item{id_expand}{Should the values in the \code{id_cols} columns be expanded by
\code{\link[tidyr:expand]{expand()}} before pivoting? This results in more rows, the output will
contain a complete expansion of all possible values in \code{id_cols}. Implicit
factor levels that aren't represented in the data will become explicit.
Additionally, the row values corresponding to the expanded \code{id_cols} will
be sorted.}

\item{names_from, values_from}{<\code{\link[tidyr:tidyr_tidy_select]{tidy-select}}> A pair of
arguments describing which column (or columns) to get the name of the
output column (\code{names_from}), and which column (or columns) to get the
cell values from (\code{values_from}).

If \code{values_from} contains multiple values, the value will be added to the
front of the output column.}

\item{names_vary}{When \code{names_from} identifies a column (or columns) with
multiple unique values, and multiple \code{values_from} columns are provided,
in what order should the resulting column names be combined?
\itemize{
\item \code{"fastest"} varies \code{names_from} values fastest, resulting in a column
naming scheme of the form: \verb{value1_name1, value1_name2, value2_name1, value2_name2}. This is the default.
\item \code{"slowest"} varies \code{names_from} values slowest, resulting in a column
naming scheme of the form: \verb{value1_name1, value2_name1, value1_name2, value2_name2}.
}}

\item{names_glue}{Instead of \code{names_sep} and \code{names_prefix}, you can supply
a glue specification that uses the \code{names_from} columns (and special
\code{.value}) to create custom column names.}

\item{names_sep}{If \code{names_from} or \code{values_from} contains multiple
variables, this will be used to join their values together into a single
string to use as a column name.}

\item{decimals}{\emph{Number of decimal places}

\code{scalar<numeric|integer>(val>=0)} // \emph{default:} \code{2}

This corresponds to the exact number of decimal places to use. A value
such as \code{2.34} can, for example, be formatted with \code{0} decimal places and
it would result in \code{"2"}. With \code{4} decimal places, the formatted value
becomes \code{"2.3400"}. The trailing zeros can be removed with
\code{drop_trailing_zeros = TRUE}. If you always need \code{decimals = 0}, the
\code{\link[gt:fmt_integer]{fmt_integer()}} function should be considered.}

\item{currency_value}{If \code{TRUE}, use \code{\link[gt:fmt_currency]{gt::fmt_currency()}} to format value
columns instead of \code{\link[gt:fmt_number]{gt::fmt_number()}}.}

\item{merge_moe}{If \code{TRUE}, use \code{\link[gt:cols_merge_uncert]{gt::cols_merge_uncert()}} to merge the
value_col and moe_col and the percent value and margin of error columns.}

\item{split}{\emph{Splitting side}

\verb{singl-kw:[last|first]} // \emph{default:} \code{"last"}

Should the delimiter splitting occur from the \code{"last"} instance of the
\code{delim} character or from the \code{"first"}? The default here uses the \code{"last"}
keyword, and splitting begins at the last instance of the delimiter in the
column name. This option only has some consequence when there is a \code{limit}
value applied that is lesser than the number of delimiter characters for a
given column name (i.e., number of splits is not the maximum possible
number).}

\item{limit}{\emph{Limit for splitting}

\verb{scalar<numeric|integer|character>} // \emph{default:} \code{NULL} (\code{optional})

An optional limit to place on the splitting procedure. The default \code{NULL}
means that a column name will be split as many times are there are
delimiter characters. In other words, the default means there is no limit.
If an integer value is given to \code{limit} then splitting will cease at the
iteration given by \code{limit}. This works in tandem with \code{split} since we can
adjust the number of splits from either the right side (\code{split = "last"})
or left side (\code{split = "first"}) of the column name.}

\item{reverse}{\emph{Reverse vector of split names}

\verb{scalar<logical>} // \emph{default:} \code{FALSE}

Should the order of split names be reversed? By default, this is \code{FALSE}.}

\item{source_note}{\emph{Source note text}

\verb{scalar<character>} // \strong{required}

Text to be used in the source note. We can optionally use the \code{\link[gt:md]{md()}} and
\code{\link[gt:html]{html()}} functions to style the text as Markdown or to retain HTML elements
in the text.}

\item{append_note}{If \code{TRUE}, add source_note to the end of the generated ACS
data label. If \code{FALSE}, any supplied source_note will be used instead of an
ACS label.}

\item{hide_na_cols}{If \code{TRUE} (default), hide any columns with all \code{NA}
values using \code{\link[gt:cols_hide]{gt::cols_hide()}}.}

\item{survey}{ACS survey, "acs5", "acs3", or "acs1".}

\item{year}{Based on the year and survey, \code{\link[=acs_survey_ts]{acs_survey_ts()}} returns a vector
of years for non-overlapping ACS samples to allow comparison.}

\item{table}{One or more table IDs to include in label or source note.}

\item{prefix}{Text to insert before ACS survey label.}

\item{end}{A character string appended to the end of the full label. Defaults
to ".".}

\item{use_md}{If \code{TRUE}, pass source_note to \code{\link[gt:md]{gt::md()}} first.}

\item{use_spanner}{If \code{TRUE} (default), create spanners for the comparison
geographies.}

\item{...}{Additional arguments passed on to methods.}
}
\description{
\code{\link[=gt_acs_compare]{gt_acs_compare()}} is a variant of \code{\link[=gt_acs]{gt_acs()}} that uses \code{\link[=pivot_acs_wider]{pivot_acs_wider()}}
to support comparisons of multiple named areas or multiple geographies
side-by-side in a combined gt table.
}
\seealso{
Other gt table: 
\code{\link{fmt_acs_estimate}()},
\code{\link{gt_acs}()},
\code{\link{tab_acs_source_note}()}
}
\concept{gt table}
\keyword{gt}
